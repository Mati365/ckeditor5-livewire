name: Code checks

on:
  push:

jobs:
  js_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Run ESLint
        run: npx eslint .

      - name: Build npm package
        run: pnpm run npm_package:build

      - name: Run TypeScript type check
        run: pnpm run typecheck

      - name: Run tests
        run: pnpm run npm_package:test

      - name: Upload JS coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./npm_package/coverage/lcov.info
          flags: javascript
          name: javascript-coverage
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  php_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          coverage: pcov

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHPUnit tests with coverage
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - name: Check coverage threshold (100%)
        run: |
          coverage=$(php -r '$xml = simplexml_load_file("coverage.xml"); $metrics = $xml->project->metrics; $percent = round(((float)$metrics["coveredstatements"] / (float)$metrics["statements"]) * 100, 2); echo $percent;')
          echo "Code coverage: $coverage%"
          if [ $(echo "$coverage < 100.0" | bc) -eq 1 ]; then
            echo "Error: Code coverage is below 100% (current: $coverage%)"
            exit 1
          fi

      - name: Upload PHP coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: php
          name: php-coverage
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Psalm
        run: vendor/bin/psalm --show-info=true --output-format=github
